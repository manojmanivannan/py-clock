name: CI/CD

on:
  push:
    tags:
     - '*'
    branches:
      - develop
      - main
  pull_request:
    branches:
      - "*"

jobs:
    pytest_build:
        runs-on: ubuntu-latest
        env:
          TERM: "linux"
        steps:
            - name: Check out the repo
              uses: actions/checkout@v2

            - name: Set up Python 3.11 üêç
              uses: actions/setup-python@v3
              with:
                python-version: "3.11"

            - name: Setup Virtual Env
              shell: bash
              run: |
                python -m venv venv
                source ./venv/bin/activate
                python -m pip install -r requirements.txt

            - name: Run PyTest üß™
              shell: bash
              run: |
                source ./venv/bin/activate
                python -m pytest -v tests

            - name: Extract tag name
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              id: tag
              run: |
                echo "TAG_NAME=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_ENV

            - name: Set Tag Name
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              run: |
                echo "Setting tag name to ${{ env.TAG_NAME }}" && sed -i "s/{{VERSION_PLACEHOLDER}}/${{ env.TAG_NAME }}/g" setup.py

            - name: Test CLI tool üîß
              shell: bash
              run: |
                source ./venv/bin/activate
                python setup.py install
                py-clock -s -m -d
                
            - name: Generate distribution üì¶
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              shell: bash
              run: |
                source ./venv/bin/activate
                python -m pip install twine
                
                python setup.py sdist bdist_wheel

            - name: Publish Python üêç distribution to PyPI
              if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
              shell: bash
              env:
                TWINE_USERNAME: "${{ secrets.TWINE_USERNAME }}"
                TWINE_PASSWORD: "${{ secrets.PYPI_API_TOKEN }}"
              run: |
                source ./venv/bin/activate
                twine upload dist/* --skip-existing

